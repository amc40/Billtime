name: Deploy App

on:
  push:
    branches:
      - main

jobs:
  deploy-terraform:
    runs-on: ubuntu-latest

    permissions:
      # Required by AWS login
      id-token: write 
      contents: read 
    
    defaults:
      run:
        working-directory: ./infrastructure/tf

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::436795273900:role/github-actions-billtime-terraform-backend
          aws-region: eu-west-2

      - name: Initialize Terraform
        run: terraform init
      
      - name: Select Terraform Workspace
        run: terraform workspace select staging

      - name: Terraform plan
        run: terraform plan -out=tfplan -var="do_token=${{secrets.DO_TOKEN}}"
      
      - name: Upload Terraform plan artifact
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan-${{ github.sha }}
          path: infrastructure/tf/tfplan
          retention-days: 30     

      - name: Apply Terraform plan
        run: terraform apply tfplan

  deploy-server:
    runs-on: ubuntu-latest
    needs: deploy-terraform
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}
      
      - name: Build and tag Docker image
        run: docker build -t registry.digitalocean.com/webb-and-wallace-container-registry/billtime-server:$(echo $GITHUB_SHA | head -c7) server/

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push Docker image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/webb-and-wallace-container-registry/billtime-server:$(echo $GITHUB_SHA | head -c7)

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 billtime-k8s-cluster

      - name: Configure K8s secrets
        run: kubectl create secret generic db-admin --from-literal=db-admin-password='${{secrets.DB_ADMIN_PASSWORD}}'

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -R -f ./infrastructure/k8s

